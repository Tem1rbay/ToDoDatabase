@model ToDoApplication.Models.ViewModels.Task.ViewTaskViewModel
@using ToDoApplication.Models.Enum                  
@{
    ViewData["title"] = "View Task Page";
}

<div class="row d-flex justify-content-between">
    <h4 class="col-5 mb-3 text-muted">Просмотр задачи</h4>
    @if(Model.Status == ToDoApplication.Models.Enum.TaskStatus.Done) {
        <div class="col-3">
            <div class="alert alert-success" role="alert">
                Выполнено
            </div>
        </div>
    } else {
        <div class="col-3">
            <div class="alert alert-danger" role="alert">
                Не выполнено
            </div>
        </div>
    }
</div>
<form>
    <div class="mb-4">
        @Html.Label("Название")
        @if (!ViewBag.IsEditting)
        {
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control mt-1", @readonly = "readonly" } })
        }
        else
        {
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control mt-1" } })
        }
    </div>
    <div class="mb-4">
        @Html.Label("Приоритет задачи")
        @if (!ViewBag.IsEditting) {
            <select name="priority" class="form-select mb-3" asp-items="Html.GetEnumSelectList<TaskPriority>()" disabled="true">
                <option value="@Model.Priority" selected>@Model.Priority</option>
            </select>
        }
        else {
            <select name="priority" class="form-select mb-3" asp-items="Html.GetEnumSelectList<TaskPriority>()"> </select>
        }
    </div>
    <div class="mb-3">
        <label class="form-lable">Описание задачи</label>
        @if (!ViewBag.IsEditting)
        {
            <textarea name="description" type="text" class="form-control" rows="5" readonly>@Model.Description</textarea>
        }
        else
        {
            <textarea name="description" type="text" class="form-control" rows="5">@Model.Description</textarea>
        }
    </div>
    @if (Model.Status == ToDoApplication.Models.Enum.TaskStatus.NotDone && ViewBag.IsEditting == false) {
        <button class="btn btn-primary" id="executeTask">Выполнить задачу</button>
    }
    @if (!ViewBag.IsEditting) {
        <button class="btn btn-primary" asp-controller="Task" asp-action="TaskView" asp-route-taskId="@Model.Id" asp-route-isEditting="@true">Редактировать задачу</button>
    }
    @if (ViewBag.IsEditting) {
        <button class="btn btn-primary" id="editTask">Сохранить</button>
    }
</form>

@section Scripts {
    <script>
        var taskId = @Model.Id;
        $('#executeTask').on('click', function (e) {
            $.ajax({
                type: 'PUT',
                url: '@Url.Action("ExecuteTask", "Task")' + String("/" + taskId),
                data: { taskId: taskId }
            })
        });
        var taskId = @Model.Id;
        $("#editTask").on('click', function (e) {
            $.ajax({
                type: 'PUT',
                url: '@Url.Action("EditTask", "Task")' + String("/" + taskId),
                data: $('#editTaskForm').serialize(),
                success: function (response) {
                    Swal.fire({
                        title: 'Информация',
                        text: response.description,
                        icon: 'success',
                        confirmButtonText: 'Окей'
                    });
                    window.location.href = "@Url.Action("TaskView", "Task")" + String("/" + taskId);
                },
                error: function (response) {
                     Swal.fire({
                        title: 'Информация',
                        text: response.responseJSON.description,
                        icon: 'error',
                        confirmButtonText: 'Окей'
                     })
                }
            })
        });
    </script>
}